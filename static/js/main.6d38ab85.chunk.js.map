{"version":3,"sources":["utils/class-names/index.js","utils/duration/index.js","pomodoro/Progress.js","pomodoro/FocusButtons.js","pomodoro/BreakButtons.js","pomodoro/Pomodoro.js","utils/useInterval/index.js","App.js","index.js"],"names":["classNames","classNameToBoolean","Object","entries","reduce","classes","className","value","concat","undefined","filter","join","minutesToDuration","givenMinutes","minutes","Math","floor","toString","padStart","Progress","progressVisibility","isFocus","focusTimer","breakTimer","currentTimer","progress","data-testid","givenSeconds","seconds","round","secondsToDuration","style","height","role","aria-valuemin","aria-valuemax","aria-valuenow","width","FocusButtons","focusTimerIncrement","focusTimerDecrement","isTimerRunning","type","onClick","disabled","name","BreakButtons","breakTimerIncrement","breakTimerDecrement","Pomodoro","useState","setIsTimerRunning","setFocusTimer","setBreakTimer","setCurrentTimer","setFocus","percent","setPercent","setProgress","percentCounter","setPercentCounter","setProgressVisibility","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","previous","Audio","play","aria-label","title","prevState","oi","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d38ab85.chunk.js","sourcesContent":["/**\n * Use this function to dynamically assign the className property of react components.\n *\n * Usage:\n *\n *  <span className={classNames({\n *               \"oi\": true,\n *               \"oi-media-play\": currentState.isPaused,\n *               'oi-media-pause': !currentState.isPaused\n *             })}/>\n *\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\n *\n * @param classNameToBoolean\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\n * @returns {string}\n *    a space delimited string of the class names which have a value of `true`.\n */\nexport default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean)\n    .reduce(\n      (classes, [className, value]) =>\n        classes.concat(value ? className : undefined),\n      []\n    )\n    .filter((className) => className !== undefined)\n    .join(\" \");\n}\n","/**\n * Formats a number of minutes as 'mm:00'.\n *\n * For example,\n *    minutesToDuration(3) = '03:00'\n *    minutesToDuration(45) = '45:00'\n *\n * @param givenMinutes\n *    the number of minutes in the duration\n * @returns {string}\n *    the given minutes formatted as 'mm:00'\n */\n\nexport function minutesToDuration(givenMinutes) {\n  const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\n  return `${minutes}:00`;\n}\n\n/**\n * Formats a number of seconds as 'mm:ss'.\n *\n * For example,\n *    secondsToDuration(305) = '05:05'\n *    secondsToDuration(930) = '15:30'\n *\n * @param givenSeconds\n *    the number of seconds in the duration\n * @returns {string}\n *    the given seconds formatted as 'mm:ss'\n */\n\nexport function secondsToDuration(givenSeconds) {\n  const minutes = Math.floor((givenSeconds % 3600) / 60)\n    .toString()\n    .padStart(2, \"0\");\n  const seconds = Math.round(givenSeconds % 60)\n    .toString()\n    .padStart(2, \"0\");\n  return `${minutes}:${seconds}`;\n}\n","import React, { useState } from 'react';\r\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\r\nimport classNames from \"../utils/class-names\";\r\n\r\n\r\nfunction Progress({progressVisibility,isFocus,focusTimer,breakTimer,currentTimer,progress}) {\r\n\r\n    return (\r\n        <div className={classNames({\r\n            \"d-none\":!progressVisibility})}>\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col\">\r\n                <h2 data-testid=\"session-title\">{isFocus ? \"Focusing\" : \"On Break\"} for {isFocus ? minutesToDuration(focusTimer) : minutesToDuration(breakTimer)} minutes</h2>\r\n                <p className=\"lead\" data-testid=\"session-sub-title\">\r\n                  {secondsToDuration(currentTimer)} remaining\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col\">\r\n                <div className=\"progress\" style={{ height: \"20px\" }}>\r\n                  <div\r\n                    className=\"progress-bar\"\r\n                    role=\"progressbar\"\r\n                    aria-valuemin=\"0\"\r\n                    aria-valuemax=\"100\"\r\n                    aria-valuenow= {progress} \r\n                    style={{ width: (progress + \"%\") }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n    );\r\n}\r\n\r\nexport default Progress;","import React from 'react';\r\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\r\n\r\n\r\nfunction FocusButtons({focusTimer,focusTimerIncrement,focusTimerDecrement,isTimerRunning}) {\r\n    return (\r\n        <div className=\"col\">\r\n          <div className=\"input-group input-group-lg mb-2\">\r\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\r\n              Focus Duration: {minutesToDuration(focusTimer)}\r\n              \r\n            </span>\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-testid=\"decrease-focus\"\r\n                onClick={focusTimerDecrement}\r\n                disabled={isTimerRunning}\r\n\r\n              >\r\n                <span className=\"oi oi-minus\" />\r\n              </button>\r\n              \r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-testid=\"increase-focus\"                \r\n                onClick={focusTimerIncrement}\r\n                disabled={isTimerRunning}\r\n\r\n              >\r\n                <span className=\"oi oi-plus\" name=\"focusTime\"/>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FocusButtons;","import React from 'react';\r\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\r\n\r\nfunction BreakButtons({breakTimer,breakTimerIncrement,breakTimerDecrement,isTimerRunning}) {\r\n    return (\r\n        <div className=\"col\">\r\n          <div className=\"float-right\">\r\n            <div className=\"input-group input-group-lg mb-2\">\r\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\r\n                Break Duration: {minutesToDuration(breakTimer)}\r\n              </span>\r\n              <div className=\"input-group-append\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-testid=\"decrease-break\"\r\n                  onClick={breakTimerDecrement}\r\n\r\n                  disabled={isTimerRunning}\r\n                >\r\n                  <span className=\"oi oi-minus\" />\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-testid=\"increase-break\"\r\n                  onClick={breakTimerIncrement}\r\n                  disabled={isTimerRunning}\r\n\r\n                >\r\n                  <span className=\"oi oi-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BreakButtons;","import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport useInterval from \"../utils/useInterval\";\nimport Progress from \"./Progress.js\";\nimport FocusButtons from \"./FocusButtons.js\";\nimport BreakButtons from \"./BreakButtons.js\"\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  \n  const [isTimerRunning, setIsTimerRunning] = useState(false);  \n  const [focusTimer,setFocusTimer] = useState(25);\n  const [breakTimer,setBreakTimer] = useState(5);\n  const [currentTimer,setCurrentTimer] = useState(focusTimer*60);\n  const [isFocus,setFocus] = useState(true);\n  const [percent,setPercent] = useState((focusTimer*60)/100);\n  const [progress,setProgress] = useState(0);\n  const [percentCounter,setPercentCounter] = useState(1);\n  const [progressVisibility,setProgressVisibility] = useState(false);\n  \n\n    const focusTimerIncrement = () => {\n      if(focusTimer < 60 && focusTimer >= 5 ) {\n        setCurrentTimer((focusTimer+5)*60);\n      setFocusTimer(focusTimer+5) \n      setPercent((focusTimer*60)/100)  \n      } \n    };    \n    const focusTimerDecrement = () => {\n      \n      if(focusTimer > 5 && focusTimer <= 60) {\n        setCurrentTimer((focusTimer-5)*60)\n      setFocusTimer(focusTimer-5)\n      setPercent((focusTimer*60)/100)\n      }\n\n    };\n    const breakTimerIncrement = () => {\n      if(breakTimer < 15) {\n      setBreakTimer(breakTimer+1)\n      \n      }\n    };\n    const breakTimerDecrement = () => {\n      if(breakTimer > 1) {\n      setBreakTimer(breakTimer-1)\n      }\n    };\n    const stopButton = () => {\n      setCurrentTimer(focusTimer*60);\n      setIsTimerRunning(false);\n      setProgress(0);\n      setFocus(true);\n      setPercentCounter(0);\n      setProgressVisibility(false);\n    }\n    \n\n  useInterval(\n    () => {\n      isFocus ? setPercent(focusTimer*60/100) : setPercent(breakTimer*60/100)\n      setPercentCounter((previous) => previous +1)\n      if((percentCounter  + (percent - Math.floor(percent))) >= percent) {\n        \n        setProgress((previous) => previous + 1);\n       setPercentCounter(1);\n      }\n      \n      \n      \n      setCurrentTimer(currentTimer -1)\n      if(currentTimer == 1 && isFocus == true  ) {\n        new Audio(`https://audio.jukehost.co.uk/61u6QMat3sNozcQGmvGMtSHyEb4ll1nM`).play();\n        setCurrentTimer(breakTimer*60);\n        setFocus((previous) => !previous);\n        setPercentCounter(1);\n        setProgress(0)\n      }\n      else if(currentTimer == 1 && isFocus == false) {\n        new Audio(`https://audio.jukehost.co.uk/61u6QMat3sNozcQGmvGMtSHyEb4ll1nM`).play();\n        setCurrentTimer(focusTimer*60);\n        setFocus((previous) => !previous);\n        setPercentCounter(1);\n        setProgress(0)\n      }\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n    setProgressVisibility(true)\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <FocusButtons focusTimer={focusTimer} focusTimerIncrement={focusTimerIncrement} focusTimerDecrement={focusTimerDecrement} isTimerRunning={isTimerRunning} />\n        <BreakButtons breakTimer={breakTimer} breakTimerIncrement={breakTimerIncrement} breakTimerDecrement={breakTimerDecrement} isTimerRunning={isTimerRunning} />\n\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n              onClick={stopButton}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <Progress progressVisibility={progressVisibility} isFocus={isFocus} focusTimer={focusTimer} breakTimer={breakTimer} currentTimer={currentTimer} progress={progress} />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n","// This custom hook is from: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}